basePath: /
definitions:
  answer.Answer:
    properties:
      answer:
        type: string
      answers:
        items:
          type: string
        type: array
    type: object
  courses.Courses:
    properties:
      authorship:
        items:
          $ref: '#/definitions/model.Course'
        type: array
      my:
        items:
          $ref: '#/definitions/model.Course'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/model.Course'
        type: array
    type: object
  create.Answer:
    properties:
      answer:
        $ref: '#/definitions/httpserver_handlers_answer_internal_create.AnswerSection'
      choice:
        $ref: '#/definitions/create.Choice'
      code:
        $ref: '#/definitions/create.Code'
      file:
        $ref: '#/definitions/create.File'
      id:
        type: string
      mapping:
        $ref: '#/definitions/create.Mapping'
      multiChoice:
        $ref: '#/definitions/create.MultiChoice'
      permutation:
        $ref: '#/definitions/create.Permutation'
      shortAnswer:
        $ref: '#/definitions/create.ShortAnswer'
    type: object
  create.Choice:
    properties:
      answer:
        type: string
    type: object
  create.ChoiceSection:
    properties:
      answer:
        maxLength: 256
        type: string
      question:
        maxLength: 4096
        type: string
      variants:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
    required:
    - answer
    - question
    - variants
    type: object
  create.Code:
    properties:
      answer:
        type: string
      lang:
        type: string
    type: object
  create.CodeSection:
    properties:
      question:
        maxLength: 4096
        type: string
    required:
    - question
    type: object
  create.Course:
    properties:
      banner:
        type: string
      description:
        maxLength: 4096
        type: string
      links:
        items:
          $ref: '#/definitions/model.Link'
        type: array
      logo:
        type: string
      name:
        maxLength: 64
        type: string
      shortDescription:
        maxLength: 512
        type: string
    type: object
  create.File:
    properties:
      answer:
        type: string
    required:
    - answer
    type: object
  create.FileSection:
    properties:
      fileTypes:
        items:
          type: string
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    required:
    - fileTypes
    - question
    type: object
  create.Group:
    properties:
      coursesIds:
        items:
          type: string
        type: array
      name:
        maxLength: 40
        minLength: 1
        type: string
      studentsIds:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  create.Mapping:
    properties:
      answer:
        items:
          type: string
        type: array
    type: object
  create.MappingSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      keys:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    required:
    - answer
    - keys
    - question
    type: object
  create.MediaSection:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  create.Module:
    properties:
      courseId:
        type: string
      name:
        maxLength: 48
        minLength: 1
        type: string
      order:
        type: number
    required:
    - name
    type: object
  create.MultiChoice:
    properties:
      answer:
        items:
          type: string
        type: array
    type: object
  create.MultiChoiceSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
      variants:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
    required:
    - answer
    - question
    - variants
    type: object
  create.Page:
    properties:
      moduleId:
        type: string
      name:
        maxLength: 48
        minLength: 1
        type: string
      order:
        type: number
    required:
    - name
    type: object
  create.Permutation:
    properties:
      answer:
        items:
          type: string
        type: array
    type: object
  create.PermutationSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    required:
    - answer
    - question
    type: object
  create.Response:
    properties:
      pageId:
        type: string
      verdict:
        $ref: '#/definitions/verdict.Type'
    type: object
  create.Review:
    properties:
      answerId:
        type: string
      comment:
        maxLength: 500
        type: string
      score:
        minimum: 0
        type: integer
    type: object
  create.Section:
    properties:
      answer:
        $ref: '#/definitions/httpserver_handlers_section_internal_create.AnswerSection'
      choice:
        $ref: '#/definitions/create.ChoiceSection'
      code:
        $ref: '#/definitions/create.CodeSection'
      file:
        $ref: '#/definitions/create.FileSection'
      mapping:
        $ref: '#/definitions/create.MappingSection'
      maxAttempts:
        maximum: 200
        minimum: 0
        type: integer
      maxScore:
        maximum: 300
        minimum: 0
        type: integer
      media:
        $ref: '#/definitions/create.MediaSection'
      multichoice:
        $ref: '#/definitions/create.MultiChoiceSection'
      order:
        type: number
      pageId:
        type: string
      permutation:
        $ref: '#/definitions/create.PermutationSection'
      shortanswer:
        $ref: '#/definitions/create.ShortAnswerSection'
      text:
        $ref: '#/definitions/create.TextSection'
    type: object
  create.ShortAnswer:
    properties:
      answer:
        type: string
    type: object
  create.ShortAnswerSection:
    properties:
      answer:
        maxLength: 256
        type: string
      question:
        maxLength: 4096
        type: string
    required:
    - answer
    - question
    type: object
  create.Teacher:
    properties:
      courses:
        items:
          $ref: '#/definitions/create.TeacherCourse'
        type: array
      userId:
        type: string
    type: object
  create.TeacherCourse:
    properties:
      courseId:
        type: string
      groupId:
        type: string
    type: object
  create.TextSection:
    properties:
      content:
        maxLength: 4096
        type: string
    required:
    - content
    type: object
  createlink.Link:
    properties:
      link:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
    required:
    - link
    - name
    type: object
  entity.SectionType:
    enum:
    - choice
    - multiChoice
    - text
    - shortAnswer
    - answer
    - code
    - permutation
    - mapping
    - file
    - media
    type: string
    x-enum-varnames:
    - ChoiceType
    - MultiChoiceType
    - TextType
    - ShortAnswerType
    - AnswerType
    - CodeType
    - PermutationType
    - MappingType
    - FileType
    - MediaType
  httpserver_handlers_answer_internal_create.AnswerSection:
    properties:
      answer:
        type: string
    type: object
  httpserver_handlers_module_internal_order.Order:
    properties:
      order:
        minimum: 1
        type: integer
    type: object
  httpserver_handlers_page_internal_order.Order:
    properties:
      order:
        minimum: 1
        type: integer
    type: object
  httpserver_handlers_section_internal_create.AnswerSection:
    properties:
      question:
        maxLength: 4096
        type: string
    required:
    - question
    type: object
  httpserver_handlers_section_internal_order.Order:
    properties:
      order:
        minimum: 1
        type: integer
    type: object
  model.Answer:
    properties:
      answer:
        type: string
      answers:
        items:
          type: string
        type: array
      createdAt:
        type: string
      file:
        $ref: '#/definitions/model.File'
      id:
        type: string
      language:
        type: string
      review:
        $ref: '#/definitions/model.Review'
      section:
        $ref: '#/definitions/model.Section'
      type:
        $ref: '#/definitions/entity.SectionType'
      verdict:
        $ref: '#/definitions/verdict.Type'
    type: object
  model.Card:
    properties:
      description:
        type: string
      id:
        type: string
      lastVisitedPage:
        type: string
      logoUrl:
        type: string
      maxScore:
        type: integer
      moduleCount:
        type: integer
      name:
        type: string
      score:
        type: integer
      slug:
        type: string
      state:
        type: string
    type: object
  model.Contact:
    properties:
      link:
        type: string
      name:
        maxLength: 32
        minLength: 1
        type: string
    required:
    - link
    - name
    type: object
  model.Course:
    properties:
      authors:
        items:
          $ref: '#/definitions/model.User'
        type: array
      banner:
        type: string
      coauthors:
        items:
          $ref: '#/definitions/model.User'
        type: array
      description:
        type: string
      groups:
        items:
          $ref: '#/definitions/model.Group'
        type: array
      id:
        type: string
      isPublished:
        type: boolean
      isStudent:
        type: boolean
      lastVisitedPage:
        type: string
      links:
        items:
          $ref: '#/definitions/model.Link'
        type: array
      logo:
        type: string
      maxScore:
        type: integer
      modules:
        description: 'TODO: скрыть для людей, у которых нет доступа к курсу'
        items:
          $ref: '#/definitions/model.Module'
        type: array
      name:
        type: string
      score:
        type: integer
      shortDescription:
        type: string
      slug:
        type: string
    type: object
  model.File:
    properties:
      location:
        type: string
      name:
        type: string
      sizeInKiB:
        type: number
      type:
        type: string
    type: object
  model.Group:
    properties:
      courses:
        items:
          $ref: '#/definitions/model.Course'
        type: array
      id:
        type: string
      inviteCode:
        type: string
      name:
        type: string
      students:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.GroupAnswers:
    properties:
      courses:
        items:
          $ref: '#/definitions/model.Course'
        type: array
      id:
        type: string
      inviteCode:
        type: string
      name:
        type: string
      students:
        items:
          $ref: '#/definitions/model.UserAnswers'
        type: array
    type: object
  model.Link:
    properties:
      id:
        type: string
      link:
        type: string
      name:
        type: string
    type: object
  model.Main:
    properties:
      assignedCards:
        items:
          $ref: '#/definitions/model.Card'
        type: array
      authorCards:
        items:
          $ref: '#/definitions/model.Card'
        type: array
      recommended:
        items:
          $ref: '#/definitions/model.Card'
        type: array
      topCard:
        $ref: '#/definitions/model.Card'
    type: object
  model.Module:
    properties:
      id:
        type: string
      maxScore:
        type: integer
      name:
        type: string
      order:
        type: number
      pages:
        items:
          $ref: '#/definitions/model.Page'
        type: array
      score:
        type: integer
      slug:
        type: string
    type: object
  model.Notification:
    properties:
      createdAt:
        type: string
      id:
        type: string
      read:
        type: boolean
      review:
        $ref: '#/definitions/model.ReviewNotification'
      type:
        type: string
    type: object
  model.Page:
    properties:
      id:
        type: string
      maxScore:
        type: integer
      name:
        type: string
      next:
        type: string
      order:
        type: number
      previous:
        type: string
      score:
        type: integer
      sections:
        items:
          $ref: '#/definitions/model.Section'
        type: array
      slug:
        type: string
    type: object
  model.Report:
    properties:
      header:
        $ref: '#/definitions/model.ReportHeader'
      rows:
        items:
          $ref: '#/definitions/model.ReportRow'
        type: array
    type: object
  model.ReportHeader:
    properties:
      maxScore:
        type: integer
      values:
        items:
          $ref: '#/definitions/model.ReportHeaderValue'
        type: array
    type: object
  model.ReportHeaderValue:
    properties:
      isModule:
        type: boolean
      maxScore:
        type: integer
      name:
        type: string
    type: object
  model.ReportRow:
    properties:
      score:
        type: integer
      user:
        $ref: '#/definitions/model.User'
      values:
        items:
          type: integer
        type: array
    type: object
  model.Review:
    properties:
      answerId:
        type: string
      comment:
        type: string
      createdAt:
        type: string
      reviewer:
        $ref: '#/definitions/model.User'
      score:
        type: number
    type: object
  model.ReviewNotification:
    properties:
      courseId:
        type: string
      maxScore:
        type: integer
      moduleId:
        type: string
      moduleName:
        type: string
      pageId:
        type: string
      pageName:
        type: string
      reviewer:
        $ref: '#/definitions/model.User'
      score:
        type: integer
    type: object
  model.Roles:
    properties:
      isAuthor:
        type: boolean
      isCoauthor:
        type: boolean
      isTeacher:
        type: boolean
    type: object
  model.Section:
    properties:
      answer:
        type: string
      answers:
        items:
          type: string
        type: array
      attempts:
        type: integer
      content:
        type: string
      file:
        $ref: '#/definitions/model.File'
      fileTypes:
        items:
          type: string
        type: array
      id:
        type: string
      keys:
        items:
          type: string
        type: array
      maxAttempts:
        type: integer
      maxScore:
        type: integer
      order:
        type: number
      pageId:
        type: string
      review:
        $ref: '#/definitions/model.Review'
      score:
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/entity.SectionType'
        enum:
        - choice
        - multiChoice
        - text
        - shortAnswer
        - answer
        - code
      variants:
        items:
          type: string
        type: array
      verdict:
        allOf:
        - $ref: '#/definitions/verdict.Type'
        enum:
        - OK
        - WA
        - WAIT
        - ""
    type: object
  model.Tokens:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  model.User:
    properties:
      avatar:
        type: string
      contact:
        $ref: '#/definitions/model.Contact'
      email:
        type: string
      id:
        type: string
      name:
        type: string
      roles:
        $ref: '#/definitions/model.Roles'
    type: object
  model.UserAnswers:
    properties:
      answers:
        items:
          $ref: '#/definitions/model.Answer'
        type: array
      maxScore:
        type: integer
      score:
        type: integer
      user:
        $ref: '#/definitions/model.User'
      withoutReview:
        type: integer
    type: object
  postauthor.Email:
    properties:
      email:
        type: string
    type: object
  postcoauthor.Request:
    properties:
      courseId:
        type: string
      email:
        type: string
    type: object
  postteacher.Email:
    properties:
      email:
        type: string
    type: object
  refresh.Refresh:
    properties:
      refreshToken:
        type: string
    type: object
  resp.Success:
    properties:
      success:
        type: integer
    type: object
  signin.SignIn:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  signup.SignUp:
    properties:
      email:
        type: string
      name:
        maxLength: 48
        minLength: 1
        type: string
      password:
        type: string
    required:
    - name
    type: object
  update.AnswerSection:
    properties:
      question:
        maxLength: 4096
        type: string
    type: object
  update.ChoiceSection:
    properties:
      answer:
        maxLength: 256
        type: string
      question:
        maxLength: 4096
        type: string
      variants:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
    required:
    - variants
    type: object
  update.CodeSection:
    properties:
      question:
        maxLength: 4096
        type: string
    type: object
  update.Course:
    properties:
      banner:
        type: string
      description:
        maxLength: 4096
        type: string
      logo:
        type: string
      name:
        maxLength: 64
        type: string
      shortDescription:
        maxLength: 512
        type: string
      slug:
        maxLength: 64
        type: string
    type: object
  update.FileSection:
    properties:
      fileTypes:
        items:
          type: string
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    type: object
  update.MappingSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      keys:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    required:
    - answer
    - keys
    type: object
  update.MediaSection:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  update.Module:
    properties:
      name:
        maxLength: 48
        minLength: 1
        type: string
    required:
    - name
    type: object
  update.MultiChoiceSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
      variants:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
    required:
    - answer
    - variants
    type: object
  update.PermutationSection:
    properties:
      answer:
        items:
          type: string
        maxItems: 10
        minItems: 1
        type: array
      question:
        maxLength: 4096
        type: string
    required:
    - answer
    type: object
  update.Section:
    properties:
      answer:
        $ref: '#/definitions/update.AnswerSection'
      choice:
        $ref: '#/definitions/update.ChoiceSection'
      code:
        $ref: '#/definitions/update.CodeSection'
      file:
        $ref: '#/definitions/update.FileSection'
      mapping:
        $ref: '#/definitions/update.MappingSection'
      maxAttempts:
        maximum: 200
        minimum: 0
        type: integer
      maxScore:
        maximum: 300
        minimum: 0
        type: integer
      media:
        $ref: '#/definitions/update.MediaSection'
      multichoice:
        $ref: '#/definitions/update.MultiChoiceSection'
      permutation:
        $ref: '#/definitions/update.PermutationSection'
      shortanswer:
        $ref: '#/definitions/update.ShortAnswerSection'
      text:
        $ref: '#/definitions/create.TextSection'
    type: object
  update.ShortAnswerSection:
    properties:
      answer:
        maxLength: 256
        type: string
      question:
        maxLength: 4096
        type: string
    type: object
  update.User:
    properties:
      avatar:
        type: string
      contact:
        $ref: '#/definitions/model.Contact'
      name:
        maxLength: 48
        type: string
    type: object
  updatepass.Password:
    properties:
      current:
        type: string
      new:
        type: string
    required:
    - current
    type: object
  verdict.Type:
    enum:
    - OK
    - ""
    - WA
    - WAIT
    - REVIEWED
    type: string
    x-enum-varnames:
    - OK
    - EMPTY
    - WA
    - WAIT
    - REVIEWED
  verify.Request:
    properties:
      email:
        type: string
      verificationCode:
        type: string
    type: object
info:
  contact: {}
  title: radium
  version: "1.0"
paths:
  /v1/account:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      tags:
      - account
    patch:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/account/courses:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/courses.Courses'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/account/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/updatepass.Password'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/answer:
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Answer'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/create.Response'
      security:
      - ApiKeyAuth: []
      tags:
      - answer
  /v1/answers/group/{groupId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: groupId
        required: true
        type: string
      - description: ' '
        in: query
        name: course_id
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.GroupAnswers'
      security:
      - ApiKeyAuth: []
      tags:
      - answer
  /v1/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: RefreshToken
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/refresh.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: SignIn
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/signin.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: SignUp
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/signup.SignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/auth/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/verify.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/author/courses:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - author
  /v1/course:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные о курсе
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Course'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/{courseId}:
    get:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
    put:
      consumes:
      - application/json
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: string
      - description: Данные о курсе
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.Course'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/join/{courseId}:
    patch:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/link/{courseId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные о ссылке
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/createlink.Link'
      - description: id
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/createlink.Link'
      security:
      - ApiKeyAuth: []
      tags:
      - course-link
  /v1/course/link/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - course-link
  /v1/course/publish/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: опубликовать или снять с публикации
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/search:
    get:
      parameters:
      - description: query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Card'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/slug/{slug}:
    get:
      parameters:
      - description: slug
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/group:
    get:
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Group'
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/{id}:
    get:
      parameters:
      - description: groupId
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/invite/{inviteCode}:
    patch:
      parameters:
      - description: inviteCode
        in: path
        name: inviteCode
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/report/{groupId}/{courseId}:
    get:
      parameters:
      - description: courseId
        in: path
        name: courseId
        required: true
        type: string
      - description: groupId
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Report'
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/search:
    get:
      parameters:
      - description: query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Group'
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/module:
    post:
      parameters:
      - description: moduleRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Module'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Module'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/module/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/module/{id}/order:
    patch:
      consumes:
      - application/json
      parameters:
      - description: module id
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver_handlers_module_internal_order.Order'
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Module'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/module/{moduleId}:
    put:
      parameters:
      - description: id
        in: path
        name: moduleId
        required: true
        type: string
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.Module'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Module'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/notification:
    get:
      consumes:
      - application/json
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Notification'
      security:
      - ApiKeyAuth: []
      tags:
      - notification
  /v1/notifications:
    delete:
      consumes:
      - application/json
      parameters:
      - description: массив uuid`ов уведомлений для удаления
        in: body
        name: request
        required: true
        schema:
          type: string
      responses:
        "200":
          description: количество удачных операций, чужие уведомления удалять нельзя
          schema:
            $ref: '#/definitions/resp.Success'
      security:
      - ApiKeyAuth: []
      tags:
      - notification
  /v1/notifications/read:
    patch:
      consumes:
      - application/json
      parameters:
      - description: массив uuid`ов уведомлений для чтения
        in: body
        name: request
        required: true
        schema:
          type: string
      responses:
        "200":
          description: количество удачных операций, чужие уведомления читать нельзя
          schema:
            $ref: '#/definitions/resp.Success'
      security:
      - ApiKeyAuth: []
      tags:
      - notification
  /v1/page:
    post:
      parameters:
      - description: создание
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Page'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/page/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - page
    get:
      parameters:
      - description: page id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/page/{id}/order:
    patch:
      consumes:
      - application/json
      parameters:
      - description: page id
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver_handlers_page_internal_order.Order'
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/page/{pageId}:
    put:
      parameters:
      - description: id
        in: path
        name: pageId
        required: true
        type: string
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.Module'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/page/slug/{slug}:
    get:
      parameters:
      - description: slug
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/review:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Review'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Review'
      security:
      - ApiKeyAuth: []
      tags:
      - review
  /v1/role/author:
    post:
      consumes:
      - application/json
      parameters:
      - description: почта будущего автора
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/postauthor.Email'
      responses:
        "201":
          description: Created
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /v1/role/coauthor:
    post:
      consumes:
      - application/json
      parameters:
      - description: почта и курс
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/postcoauthor.Request'
      responses:
        "201":
          description: Created
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /v1/role/coauthor/{id}/{courseId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: courseId
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /v1/role/teacher:
    post:
      consumes:
      - application/json
      parameters:
      - description: почта будущего преподавателя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/postteacher.Email'
      responses:
        "201":
          description: Created
      security:
      - ApiKeyAuth: []
      tags:
      - role
  /v1/section:
    post:
      consumes:
      - application/json
      parameters:
      - description: Информация для раздела
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Section'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Section'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/section/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - section
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Информация для раздела
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.Section'
      responses:
        "200":
          description: updated
          schema:
            $ref: '#/definitions/model.Section'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/section/{id}/answer:
    get:
      consumes:
      - application/json
      parameters:
      - description: section id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/answer.Answer'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/section/{id}/order:
    patch:
      consumes:
      - application/json
      parameters:
      - description: section id
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver_handlers_section_internal_order.Order'
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.Section'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/teacher:
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.Teacher'
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - teacher
  /v1/teacher/courses:
    get:
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - teacher
  /v1/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.File'
      security:
      - ApiKeyAuth: []
      tags:
      - file
  /v1/user/search:
    get:
      parameters:
      - description: query
        in: query
        name: query
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v2/account/courses:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Main'
      security:
      - ApiKeyAuth: []
      tags:
      - account
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
