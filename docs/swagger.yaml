basePath: /
definitions:
  create.AnswerSectionAnswerPost:
    properties:
      answer:
        type: string
    type: object
  create.AnswerSectionPost:
    properties:
      maxScore:
        type: integer
      question:
        type: string
    type: object
  create.ChoiceSectionAnswerPost:
    properties:
      answer:
        type: string
    type: object
  create.ChoiceSectionPost:
    properties:
      answer:
        type: string
      maxScore:
        type: integer
      question:
        type: string
      variants:
        items:
          type: string
        type: array
    type: object
  create.MultiChoiceSectionPost:
    properties:
      answer:
        items:
          type: string
        type: array
      maxScore:
        type: integer
      question:
        type: string
      variants:
        items:
          type: string
        type: array
    type: object
  create.MultichoiceSectionAnswerPost:
    properties:
      answer:
        items:
          type: string
        type: array
    type: object
  create.ShortAnswerSectionAnswerPost:
    properties:
      answer:
        type: string
    type: object
  create.ShortAnswerSectionPost:
    properties:
      answer:
        type: string
      maxScore:
        type: integer
      question:
        type: string
    type: object
  create.TextSectionPost:
    properties:
      content:
        type: string
    type: object
  create.teacherCoursePost:
    properties:
      courseId:
        type: string
      groupId:
        type: string
    type: object
  entity.AnswerReview:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      ownerId:
        type: string
      score:
        type: number
      updatedAt:
        type: string
    type: object
  internal_httpserver_handlers_answer_internal_create.Request:
    properties:
      answer:
        $ref: '#/definitions/create.AnswerSectionAnswerPost'
      choice:
        $ref: '#/definitions/create.ChoiceSectionAnswerPost'
      id:
        type: string
      multiChoice:
        $ref: '#/definitions/create.MultichoiceSectionAnswerPost'
      shortAnswer:
        $ref: '#/definitions/create.ShortAnswerSectionAnswerPost'
    type: object
  internal_httpserver_handlers_course_internal_create.Request:
    properties:
      banner:
        type: string
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/model.Link'
        type: array
      logo:
        type: string
      name:
        type: string
      shortDescription:
        type: string
    type: object
  internal_httpserver_handlers_group_internal_create.Request:
    properties:
      coursesIds:
        items:
          type: string
        type: array
      name:
        type: string
      studentsIds:
        items:
          type: string
        type: array
    type: object
  internal_httpserver_handlers_module_internal_create.Request:
    properties:
      courseId:
        type: string
      name:
        type: string
      order:
        type: number
    type: object
  internal_httpserver_handlers_page_internal_create.Request:
    properties:
      moduleId:
        type: string
      name:
        type: string
      order:
        type: number
    type: object
  internal_httpserver_handlers_review_internal_create.Request:
    properties:
      id:
        type: string
      score:
        type: number
    type: object
  internal_httpserver_handlers_section_internal_create.Request:
    properties:
      answer:
        $ref: '#/definitions/create.AnswerSectionPost'
      choice:
        $ref: '#/definitions/create.ChoiceSectionPost'
      multichoice:
        $ref: '#/definitions/create.MultiChoiceSectionPost'
      order:
        type: integer
      pageId:
        type: string
      shortanswer:
        $ref: '#/definitions/create.ShortAnswerSectionPost'
      text:
        $ref: '#/definitions/create.TextSectionPost'
    type: object
  internal_httpserver_handlers_teacher_internal_create.Request:
    properties:
      courses:
        items:
          $ref: '#/definitions/create.teacherCoursePost'
        type: array
      teacherId:
        type: string
    type: object
  model.Course:
    properties:
      authors:
        items:
          $ref: '#/definitions/model.User'
        type: array
      banner:
        type: string
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/model.Link'
        type: array
      logo:
        type: string
      modules:
        description: 'TODO: скрыть для людей, у которых нет доступа к курсу'
        items:
          $ref: '#/definitions/model.Module'
        type: array
      name:
        type: string
      shortDescription:
        type: string
      slug:
        type: string
    type: object
  model.File:
    properties:
      location:
        type: string
    type: object
  model.Link:
    properties:
      link:
        type: string
      name:
        type: string
    type: object
  model.Module:
    properties:
      id:
        type: string
      name:
        type: string
      order:
        type: number
      pages:
        items:
          $ref: '#/definitions/model.Page'
        type: array
      slug:
        type: string
    type: object
  model.Page:
    properties:
      id:
        type: string
      name:
        type: string
      order:
        type: number
      sections:
        items:
          $ref: '#/definitions/model.Section'
        type: array
      slug:
        type: string
    type: object
  model.Section:
    properties:
      answer:
        type: string
      answers:
        items:
          type: string
        type: array
      content:
        type: string
      id:
        type: string
      maxScore:
        type: integer
      order:
        type: integer
      pageId:
        type: string
      score:
        type: integer
      type:
        type: string
      variants:
        items:
          type: string
        type: array
      verdict:
        type: string
    type: object
  model.Tokens:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: string
      refreshToken:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  refresh.Request:
    properties:
      refreshToken:
        type: string
    type: object
  signin.Request:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  signup.Request:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  update.Request:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  updatepass.Request:
    properties:
      current:
        type: string
      new:
        type: string
    type: object
  verdict.Verdict:
    properties:
      verdict:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: без юлерна
  version: "1.0"
paths:
  /v1/account:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      tags:
      - account
    patch:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/account/courses:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/account/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/updatepass.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /v1/answer:
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_answer_internal_create.Request'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/verdict.Verdict'
      security:
      - ApiKeyAuth: []
      tags:
      - answer
  /v1/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: RefreshToken
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/refresh.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/signin.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: SignUp
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/signup.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tokens'
      tags:
      - auth
  /v1/course:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные о курсе
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_course_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/{courseId}:
    get:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      tags:
      - course
  /v1/course/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/join/{courseId}:
    patch:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /v1/course/slug/{slug}:
    get:
      parameters:
      - description: course slug
        in: path
        name: slug
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Course'
      tags:
      - course
  /v1/group:
    get:
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_group_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/{id}:
    get:
      parameters:
      - description: groupId
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/group/invite/{inviteCode}:
    patch:
      parameters:
      - description: inviteCode
        in: path
        name: inviteCode
        required: true
        type: string
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /v1/module:
    post:
      parameters:
      - description: moduleRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_module_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Module'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/module/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /v1/page:
    post:
      parameters:
      - description: создание
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_page_internal_create.Request'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/page/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - page
    get:
      parameters:
      - description: page id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.Page'
      security:
      - ApiKeyAuth: []
      tags:
      - page
  /v1/review/answer:
    post:
      consumes:
      - application/json
      parameters:
      - description: score - от 0 до 1
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_review_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/entity.AnswerReview'
      security:
      - ApiKeyAuth: []
      tags:
      - review
  /v1/section:
    post:
      consumes:
      - application/json
      parameters:
      - description: Информация для раздела
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_section_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.Section'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/section/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: по умолчанию soft
        in: query
        name: is_soft
        type: boolean
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /v1/teacher:
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_httpserver_handlers_teacher_internal_create.Request'
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - teacher
  /v1/teacher/courses:
    get:
      responses:
        "200":
          description: ' '
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - teacher
  /v1/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/model.File'
      security:
      - ApiKeyAuth: []
      tags:
      - file
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
