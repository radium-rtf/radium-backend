basePath: /v1
definitions:
  entity.Collaborator:
    properties:
      course_id:
        type: integer
      user_email:
        type: string
    type: object
  entity.Course:
    properties:
      author_id:
        type: string
      description:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  entity.CourseModules:
    properties:
      id:
        type: integer
      logo:
        type: string
      modules:
        items:
          $ref: '#/definitions/entity.ModuleDto'
        type: array
      name:
        type: string
      type:
        type: string
    type: object
  entity.CourseTitle:
    properties:
      author:
        $ref: '#/definitions/entity.UserDto'
      collaborators:
        items:
          $ref: '#/definitions/entity.UserDto'
        type: array
      description:
        type: string
      id:
        type: integer
      links:
        items:
          $ref: '#/definitions/entity.LinkDto'
        type: array
      logo:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  entity.GroupName:
    properties:
      name:
        type: string
    type: object
  entity.LinkDto:
    properties:
      link:
        type: string
      name:
        type: string
    type: object
  entity.LinkRequest:
    properties:
      course_id:
        type: integer
      link:
        type: string
      name:
        type: string
    type: object
  entity.ModuleDto:
    properties:
      name:
        type: string
      name_eng:
        type: string
    type: object
  entity.ModuleRequest:
    properties:
      course_id:
        type: integer
      name:
        type: string
    type: object
  entity.ModuleSlides:
    properties:
      id:
        type: integer
      name:
        type: string
      name_eng:
        type: string
      slides:
        items:
          $ref: '#/definitions/entity.SlideDto'
        type: array
    type: object
  entity.PasswordUpdate:
    properties:
      current:
        type: string
      new:
        type: string
    type: object
  entity.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  entity.SectionChoiceAnswerDto:
    properties:
      answer:
        type: string
      id:
        type: integer
      section_id:
        type: integer
      verdict:
        type: string
    type: object
  entity.SectionChoiceAnswerPost:
    properties:
      answer:
        type: string
      section_id:
        type: integer
    type: object
  entity.SectionChoiceDto:
    properties:
      cost:
        type: integer
      id:
        type: integer
      order_by:
        type: integer
      question:
        type: string
      score:
        type: integer
      slide_id:
        type: integer
      variants:
        items:
          type: string
        type: array
    type: object
  entity.SectionChoicePost:
    properties:
      cost:
        type: integer
      order_by:
        type: integer
      question:
        type: string
      slide_id:
        type: integer
      variants:
        additionalProperties:
          type: boolean
        type: object
    type: object
  entity.SectionQuestionAnswerDto:
    properties:
      answer:
        type: string
      id:
        type: integer
      section_id:
        type: integer
      verdict:
        type: string
    type: object
  entity.SectionQuestionAnswerPost:
    properties:
      answer:
        type: string
      section_id:
        type: integer
    type: object
  entity.SectionQuestionDto:
    properties:
      case_sensitive:
        type: boolean
      cost:
        type: integer
      id:
        type: integer
      order_by:
        type: integer
      question:
        type: string
      score:
        type: integer
      slide_id:
        type: integer
    type: object
  entity.SectionQuestionPost:
    properties:
      answer:
        type: string
      case_sensitive:
        type: boolean
      cost:
        type: integer
      order_by:
        type: integer
      question:
        type: string
      slide_id:
        type: integer
    type: object
  entity.SectionTextPost:
    properties:
      markdown:
        type: string
      order_by:
        type: integer
      slide_id:
        type: integer
    type: object
  entity.SignIn:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entity.SignUp:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  entity.Slide:
    properties:
      id:
        type: string
      module:
        type: integer
      name:
        type: string
      nameEng:
        type: string
    type: object
  entity.SlideDto:
    properties:
      id:
        type: integer
      name:
        type: string
      name_eng:
        type: string
    type: object
  entity.SlideRequest:
    properties:
      course_id:
        type: integer
      module_name_eng:
        type: string
      name:
        type: string
    type: object
  entity.Tokens:
    properties:
      access_token:
        type: string
      expires_in:
        type: string
      refresh_token:
        type: string
    type: object
  entity.UserDto:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  entity.UserName:
    properties:
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: без юлерна
  version: "1.0"
paths:
  /account:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /account/course:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/entity.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /account/name:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Новое имя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UserName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /account/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: PasswordUpdate
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.PasswordUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: RefreshToken
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Tokens'
      tags:
      - auth
  /auth/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: SignIn
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Tokens'
      tags:
      - auth
  /auth/signUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: SignUp
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SignUp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Tokens'
      tags:
      - auth
  /collaborator:
    post:
      parameters:
      - description: collaborator
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Collaborator'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.Collaborator'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /course:
    get:
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/entity.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: logo
        in: formData
        name: logo
        required: true
        type: file
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - description: kotlin, math и тд
        in: formData
        name: type
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/entity.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /course/{courseId}:
    get:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/entity.CourseTitle'
      tags:
      - course
  /group:
    post:
      parameters:
      - description: GroupName
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.GroupName'
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /join/course/{courseId}:
    post:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: integer
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/entity.Course'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /join/group/{groupId}:
    patch:
      parameters:
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
  /link/course:
    post:
      parameters:
      - description: link
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.LinkRequest'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.LinkDto'
      security:
      - ApiKeyAuth: []
      tags:
      - course
  /module:
    post:
      parameters:
      - description: moduleRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.ModuleRequest'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/entity.ModuleDto'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /module/{courseId}:
    get:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/entity.CourseModules'
      security:
      - ApiKeyAuth: []
      tags:
      - module
  /section/choice:
    post:
      parameters:
      - description: создание секции c вариантом ответа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SectionChoicePost'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.SectionChoiceDto'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /section/choice/answer:
    post:
      parameters:
      - description: ответ на задание с вариантом ответа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SectionChoiceAnswerPost'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.SectionChoiceAnswerDto'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /section/question:
    post:
      parameters:
      - description: создание вопросительной секции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SectionQuestionPost'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.SectionQuestionDto'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /section/question/answer:
    post:
      parameters:
      - description: ответ на вопрос
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SectionQuestionAnswerPost'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.SectionQuestionAnswerDto'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /section/text:
    post:
      parameters:
      - description: создвние текствой секции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SectionTextPost'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.Slide'
      security:
      - ApiKeyAuth: []
      tags:
      - section
  /slide:
    post:
      parameters:
      - description: создание слайда
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.SlideRequest'
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.Slide'
      security:
      - ApiKeyAuth: []
      tags:
      - slide
  /slide/{courseId}/{moduleNameEng}:
    get:
      parameters:
      - description: course id
        in: path
        name: courseId
        required: true
        type: integer
      - description: moduleName
        in: path
        name: moduleNameEng
        required: true
        type: string
      responses:
        "201":
          description: ok
          schema:
            $ref: '#/definitions/entity.ModuleSlides'
      security:
      - ApiKeyAuth: []
      tags:
      - slide
  /teacher/{userId}/group/{groupId}:
    post:
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "201":
          description: created
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - group
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
